# This adds security headers
add_header X-Frame-Options "SAMEORIGIN";
add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
add_header X-XSS-Protection "1; mode=block";
add_header X-Content-Type-Options "nosniff";
#add_header Content-Security-Policy "default-src 'self'; img-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'";
add_header Content-Security-Policy-Report-Only "default-src 'self'; img-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'";

ssl_certificate      /etc/nginx/certs/plone.mysite.test.crt;
ssl_certificate_key  /etc/nginx/certs/plone.mysite.test.key;

server {
    #listen 80;
    listen 443 default ssl;
    server_name  plone.mysite.test www.plone.mysite.test;
    access_log  /var/log/nginx/plone.mysite.test.access.log;
    error_log  /var/log/nginx/plone.mysite.test.error.log;

    # Redirect www.domain.com to domain.com
    #if ($host = plone.mysite.test){
    #    return 301 http://www.plone.mysite.test$request_uri;
    #}

    ## Redirect attempts for login to cms.domain.com
    if ($host = plone.mysite.test) {
        rewrite ^(.*)(/login_|/require_login|/failsafe_login_form)(.*) https://cms.plone.mysite.test$1$2$3 redirect;
    }

    ## If we are not handling our main domain, Disallow all robots to croll it.
    location /robots.txt {
        if ($host != plone.mysite.test) {
             return 200 "User-agent: *\nDisallow: /";
        }
    }

    ## Redirection file
    #include /etc/nginx/redirects.conf;

    # Rewrite to VirtualHost format
    #rewrite ^/(.*)$ /VirtualHostBase/http/$host:80/Plone/VirtualHostRoot/$1 last;
    rewrite ^/(.*)$ /VirtualHostBase/http/$host:443/Plone/VirtualHostRoot/$1 last;


    # ZMI forms lack CSRF protection
    location  ~ /manage(_.+)?$ {
            deny all;
    }

    # Proxy to a backend, either Plone or Varnish
    location / {
            #proxy_pass http://plone:8080;
            proxy_pass http://haproxy:5000;
            proxy_set_header host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
